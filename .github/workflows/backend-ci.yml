name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'EnglishForce-core/EnglishForce-backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'EnglishForce-core/EnglishForce-backend/**'

permissions: read-all              # Gi·ªõi h·∫°n quy·ªÅn m·∫∑c ƒë·ªãnh cho workflow
concurrency:                       # Tr√°nh ch·∫°y nhi·ªÅu workflow tr√πng nhau c√πng nh√°nh
  group: backend-${{ github.ref }}
  cancel-in-progress: true

defaults:                          # Thi·∫øt l·∫≠p th∆∞ m·ª•c m·∫∑c ƒë·ªãnh ƒë·ªÉ ch·∫°y c√°c l·ªánh
  run:
    working-directory: EnglishForce-core/EnglishForce-backend

jobs:
  test:                            # Job test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]       # B·∫°n c√≥ th·ªÉ th√™m 20.x n·∫øu c·∫ßn
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: EnglishForce-core/EnglishForce-backend/package-lock.json

      - name: Install dependencies
        run: npm ci

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to vocago with error handling
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/$USER/vocago
            echo "üîÑ Updating code from develop branch..."
            git fetch --all
            git checkout develop || { echo "‚ùå Checkout failed"; exit 1; }
            git reset --hard origin/develop || { echo "‚ùå Reset failed"; exit 1; }
            git pull origin develop || { echo "‚ùå Pull failed"; exit 1; }
            echo "‚úÖ Code updated successfully"

            echo "üê≥ Building and starting containers..."
            docker compose up -d --build backend
            echo "üìä Container status:"
            docker compose ps
